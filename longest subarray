#include <stdio.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

int findMaxLength(int arr[], int n) {
    int maxLength = 0;
    int sum = 0;
    int hashMap[2 * n + 1];

    for (int i = 0; i < 2 * n + 1; i++) {
        hashMap[i] = -1;
    }

    hashMap[n] = 0;

    for (int i = 0; i < n; i++) {
        sum += (arr[i] == 0) ? -1 : 1;

        if (hashMap[sum + n] != -1) {
            maxLength = max(maxLength, i + 1 - hashMap[sum + n]);
        } else {
            hashMap[sum + n] = i + 1;
        }
    }

    return maxLength;
}

int main() {
    int arr[] = {0, 1, 0, 1, 1, 1, 0};
    int n = sizeof(arr) / sizeof(arr[0]);
    int result = findMaxLength(arr, n);
    printf("The length of the longest subarray with equal 0s and 1s is: %d\n", result);
    return 0;
}
